services:

  database:
    image: postgres:16.0-alpine
    restart: always
    container_name: database
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - ./database:/var/lib/postgresql/data

  redis:
    image: redis:7.4-alpine
    ports:
      - "6379:6379"
    restart: always
    env_file: .env

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards

  app:
    build:
      context: .
      dockerfile: ./src/Dockerfile
    ports:
      - ${APP_PORT}:${APP_PORT}
    env_file:
      - .env
    restart: unless-stopped
    container_name: app
    depends_on:
      - redis
      - database
    command: bash -c "alembic upgrade head & python3 api_server/main.py"

  celery:
    build:
      context: .
      dockerfile: ./src/Dockerfile
    restart: unless-stopped
    container_name: celery
    depends_on:
      - redis
      - database
    command: celery -A src.tasks.analyze:celery worker --loglevel=INFO


volumes:
  database:
  grafana: